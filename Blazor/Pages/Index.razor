@page "/"

@using Blazor.Data;
@inject ApiService postService

@using shared.Model;


@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration


@if (posts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var item in posts)
    {

        <div class="card">
            <div class="card-header">
                <p>Title: <a href="/api/posts/@item.PostId" class="card-title"> @item.Title </a></p>
            </div>
            <div class="card-body">
                <h5 class="card-text">Author: @item.Author</h5>
                <p class="card-text">Content: @item.Content</p>
                <p class="card-text">Upvotes: @item.Upvotes</p>
                <p class="card-text">Downvotes: @item.Downvotes</p>
                <button class="btn btn-primary" @onclick="() =>Upvote(item.PostId)">Upvote</button>
                <button class="btn btn-primary" @onclick="() =>Downvote(item.PostId)">Downvote</button>

            
            </div>
        </div>
    }
}
@code {

    private Post[] posts;

    protected override async Task OnInitializedAsync()
    {
        posts = await postService.GetPostData();
    }


    public void Upvote(int id)
    {
        postService.UpvotePost(id);
    }

    public void Downvote(int id)
    {
        postService.DownvotePost(id);
    }
}
